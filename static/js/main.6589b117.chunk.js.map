{"version":3,"sources":["Components/Accordion/Accordion.tsx","Components/Raiting.tsx","Components/OnOff/UnControlledOnOff.tsx","Components/Accordion/UnControlledAccordion.tsx","Components/OnOff/OnOff.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","props","title","setCollapsed","collapsed","items","onClick","AccordionBody","map","m","index","value","AccordionTitle","Raiting","selected","ratingValue","setValue","Star","UnControlledOnOff","useState","color","setColor","onStyle","backgroundColor","offStyle","indicatorStyle","style","UnControlledAccordion","toggle","OnOff","MyComponents","options","label","UncotrolledInput","inputRef","useRef","ref","el","current","ControlledInput","parent","setParent","onChange","e","currentTarget","ControlledCheckbox","type","checked","ControlledSelect","App","setRatingValue","onClickfffff","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAeaA,EAAY,SAACC,GACtB,OACI,gCACI,cAAC,EAAD,CAAkBC,MAAOD,EAAMC,MACfC,aAAcF,EAAME,eACnCF,EAAMG,WAAc,cAAC,EAAD,CAAeC,MAAOJ,EAAMI,MAAOC,QAASL,EAAMK,cAUtEC,EAAgB,SAACN,GAC1B,OACI,8BACKA,EAAMI,MAAMG,KAAI,SAACC,EAAGC,GAAJ,OACb,oBAAgBJ,QAAS,WAAML,EAAMK,QAAQG,EAAEE,QAA/C,SAAyDF,EAAEP,OAAlDQ,SAWZE,EAAiB,SAACX,GAC3B,OACI,8BACI,oBAAIK,QAASL,EAAME,aAAnB,SAAkCF,EAAMC,WCtCvCW,EAAU,SAACZ,GAMpB,OACI,gCACI,cAAC,EAAD,CAAMa,SAAUb,EAAMc,YAAY,EAAGC,SAAUf,EAAMe,SAAUL,MAAO,IACtE,cAAC,EAAD,CAAMG,SAAUb,EAAMc,YAAY,EAAGC,SAAUf,EAAMe,SAAUL,MAAO,IACtE,cAAC,EAAD,CAAMG,SAAUb,EAAMc,YAAY,EAAGC,SAAUf,EAAMe,SAAUL,MAAO,IACtE,cAAC,EAAD,CAAMG,SAAUb,EAAMc,YAAY,EAAGC,SAAUf,EAAMe,SAAUL,MAAO,IACtE,cAAC,EAAD,CAAMG,SAAUb,EAAMc,YAAY,EAAGC,SAAUf,EAAMe,SAAUL,MAAO,QAerEM,EAAO,SAAChB,GAChB,OAAQ,sBAAMK,QAAS,kBAAIL,EAAMe,SAASf,EAAMU,QAAxC,SAAiDV,EAAMa,SAAU,sCAAc,WChC9EI,EAAoB,WAG9B,MAAwBC,oBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAEIC,EAAU,CAACC,gBAAiBH,EAAO,QAAU,SAC7CI,EAAW,CAACD,gBAAiBH,EAAO,QAAU,OAC9CK,EAAiB,CAACF,gBAAiBH,EAAO,QAAU,OAEzD,OACI,gCAAK,wBAAQd,QAAS,WAAMe,GAAS,IAAQK,MAAOJ,EAA/C,gBACD,wBAAQhB,QAAS,WAAMe,GAAS,IAASK,MAAOF,EAAhD,iBACA,wBAAQE,MAAOD,EAAf,2BCXEE,EAAwB,SAAC1B,GAGlC,MAAgCkB,oBAAS,GAAzC,mBAAKf,EAAL,KAAgBD,EAAhB,KAMA,OACI,gCACA,cAAC,EAAD,CAAgByB,OANF,WACdzB,GAAcC,IAMEF,MAAOD,EAAMC,QACxBE,GAAc,cAAC,EAAD,QAKdG,EAAgB,WACzB,OACI,gCACI,mCACA,mCACA,uCAUCK,EAAiB,SAACX,GAC3B,OACI,8BACI,oBAAIK,QAAS,kBAAIL,EAAM2B,UAAvB,SAAkC3B,EAAMC,WCpCtC2B,EAAQ,SAAC5B,GAGnB,IAAIqB,EAAU,CAACC,gBAAiBtB,EAAMmB,MAAO,QAAU,SACnDI,EAAW,CAACD,gBAAiBtB,EAAMmB,MAAO,QAAU,OACpDK,EAAiB,CAACF,gBAAiBtB,EAAMmB,MAAO,QAAU,OAE/D,OACI,gCAAK,wBAAQd,QAASL,EAAMoB,SAAUK,MAAOJ,EAAxC,gBACD,wBAAQhB,QAASL,EAAMoB,SAAUK,MAAOF,EAAxC,iBACA,wBAAQE,MAAOD,EAAf,2B,OC8CX,IAAMK,EAAe,WAMjB,OACI,8BAAK,cAAC,IAAD,CAAQC,QAND,CACZ,CAAEpB,MAAO,YAAaqB,MAAO,aAC7B,CAAErB,MAAO,aAAcqB,MAAO,cAC9B,CAAErB,MAAO,UAAWqB,MAAO,iBAO7BC,EAAmB,WACrB,MAA0Bd,mBAAS,IAAnC,mBAAOR,EAAP,KAAcK,EAAd,KACMkB,EAAWC,iBAAyB,MAK1C,OACI,gCACI,uBAAOC,IAAKF,IACZ,wBAAQ5B,QAPH,WACT,IAAM+B,EAAKH,EAASI,QACpBtB,EAASqB,EAAG1B,QAKR,kBAFJ,oBAGsBA,MAKxB4B,EAAkB,WACpB,MAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAKA,OACI,uBAAO9B,MAAO6B,EAAQE,SALT,SAACC,GACdF,EAAUE,EAAEC,cAAcjC,WAO5BkC,EAAqB,WACvB,MAA4B1B,oBAAS,GAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAKA,OACI,uBAAOK,KAAM,WAAYC,QAASP,EAAQE,SAL7B,SAACC,GACdF,EAAUE,EAAEC,cAAcG,aAO5BC,EAAmB,WACrB,MAA4B7B,mBAA6B,KAAzD,mBAAOqB,EAAP,KAAeC,EAAf,KAKA,OACI,yBAAQ9B,MAAO6B,EAAQE,SALV,SAACC,GACdF,EAAUE,EAAEC,cAAcjC,QAI1B,UACI,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,sBA2BGsC,EAxIf,WAEI,MAAoC9B,mBAA0B,GAA9D,mBAAKJ,EAAL,KAAkBmC,EAAlB,KACA,EAAgC/B,oBAAkB,GAAlD,mBAAKf,EAAL,KAAgBD,EAAhB,KACA,EAAwBgB,oBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAEM8B,EAAe,WACjBC,MAAM,cAGV,OACI,gCACI,cAAC,EAAD,CAAOhC,MAAOA,EACPC,SAAU,WACNA,GAAUD,MAErB,cAAC,EAAD,CAAWlB,MAAO,OACPI,QAAS6C,EACT9C,MAAO,CAAC,CAACH,MAAO,SAAUS,MAAO,GAC7B,CAACT,MAAO,SAAUS,MAAO,IAC7BP,WAAYA,EACZD,aAAc,WACVA,GAAcC,MAG7B,cAAC,EAAD,CAAWF,MAAO,QACPI,QAAS6C,EACT9C,MAAO,GACPD,UAAWA,EACXD,aAAc,WACVA,GAAcC,MAG7B,cAAC,EAAD,CAASW,YAAaA,EAAaC,SAAUkC,IAC7C,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAuBhD,MAAO,YAC9B,cAAC,EAAD,CAAuBA,MAAO,aAC9B,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACD,cAAC,EAAD,QCzCImD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6589b117.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype ItemType = {\r\n    title: string\r\n    value: any\r\n}\r\n\r\ntype propsType = {\r\n    title: string\r\n    collapsed: boolean\r\n    setCollapsed: ()=> void\r\n    items: ItemType[]\r\n    onClick: (value:any)=> void\r\n}\r\n\r\nexport const Accordion = (props: propsType) => {\r\n    return (\r\n        <div >\r\n            <AccordionTitle   title={props.title}\r\n                            setCollapsed={props.setCollapsed}/>\r\n            {props.collapsed &&  <AccordionBody items={props.items} onClick={props.onClick}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype propsBodyType = {\r\n    items: ItemType[]\r\n    onClick: (value:any)=> void\r\n}\r\n\r\nexport const AccordionBody = (props: propsBodyType) => {\r\n    return (\r\n        <div>\r\n            {props.items.map((m, index)=>\r\n                <li key={index} onClick={()=> {props.onClick(m.value)}}>{m.title}</li>)}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype propsTypeTitle = {\r\n    title: string\r\n    setCollapsed: ()=> void\r\n\r\n}\r\n\r\nexport const AccordionTitle = (props: propsTypeTitle) => {\r\n    return (\r\n        <div>\r\n            <h3 onClick={props.setCollapsed}>{props.title}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Dispatch, SetStateAction, useState} from \"react\";\r\n\r\nexport type ratingValueType = 0 | 1 | 2 | 3 | 4 | 5\r\n\r\n\r\nexport type ratingPropsType = {\r\n   ratingValue: ratingValueType\r\n    setValue: (value: ratingValueType)=> void\r\n}\r\n\r\nexport const Raiting = (props: ratingPropsType) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={props.ratingValue>0} setValue={props.setValue} value={1}/>\r\n            <Star selected={props.ratingValue>1} setValue={props.setValue} value={2}/>\r\n            <Star selected={props.ratingValue>2} setValue={props.setValue} value={3}/>\r\n            <Star selected={props.ratingValue>3} setValue={props.setValue} value={4}/>\r\n            <Star selected={props.ratingValue>4} setValue={props.setValue} value={5}/>\r\n\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\ntype propsType = {\r\n    selected: boolean\r\n    setValue: (value: ratingValueType)=> void\r\n    value: ratingValueType\r\n\r\n}\r\n\r\nexport const Star = (props: propsType) => {\r\n     return  <span onClick={()=>props.setValue(props.value)}>{props.selected? <b>star </b>: 'star '}</span>\r\n\r\n}","import React, {useState} from \"react\";\r\nimport s from './OnOff.module.css';\r\n//type colorType = {\r\n  //  color: boolean\r\n//}\r\n\r\nexport  const UnControlledOnOff = () => {\r\n\r\n\r\n    let [color, setColor] = useState(false)\r\n\r\n    let onStyle = {backgroundColor: color? 'green' : 'white'}\r\n    let offStyle = {backgroundColor: color? 'white' : 'red'}\r\n    let indicatorStyle = {backgroundColor: color? 'green' : 'red'}\r\n\r\n   return (\r\n       <div><button onClick={()=> {setColor(true)}} style={onStyle}>on</button>\r\n           <button onClick={()=> {setColor(false)}} style={offStyle}>off</button>\r\n           <button style={indicatorStyle}>indicator</button>\r\n       </div>\r\n   )\r\n}","import React, {useState} from \"react\";\r\n\r\ntype propsType = {\r\n    title: string\r\n   // collapsed: boolean\r\n}\r\n\r\nexport const UnControlledAccordion = (props: propsType) => {\r\n\r\n\r\n    let [collapsed, setCollapsed] = useState(false)\r\n\r\n    let unCollapsed = () => {\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n        <AccordionTitle toggle={unCollapsed}\r\n                        title={props.title}/>\r\n            {collapsed &&  <AccordionBody/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AccordionBody = () => {\r\n    return (\r\n        <div>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype propsTypeTitle = {\r\n    title: string\r\n    toggle: ()=> void\r\n}\r\n\r\nexport const AccordionTitle = (props: propsTypeTitle) => {\r\n    return (\r\n        <div>\r\n            <h3 onClick={()=>props.toggle()}>{props.title}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport s from './OnOff.module.css';\r\nexport type colorType = {\r\n    color: boolean\r\n    setColor: ()=> void\r\n}\r\n\r\nexport  const OnOff = (props:colorType) => {\r\n\r\n\r\n    let onStyle = {backgroundColor: props.color? 'green' : 'white'}\r\n    let offStyle = {backgroundColor: props.color? 'white' : 'red'}\r\n    let indicatorStyle = {backgroundColor: props.color? 'green' : 'red'}\r\n\r\n   return (\r\n       <div><button onClick={props.setColor} style={onStyle}>on</button>\r\n           <button onClick={props.setColor} style={offStyle}>off</button>\r\n           <button style={indicatorStyle}>indicator</button>\r\n       </div>\r\n   )\r\n}","import React, {ChangeEvent, useRef, useState} from 'react';\nimport './App.css';\nimport {Accordion} from \"./Components/Accordion/Accordion\";\nimport {Raiting, ratingValueType} from \"./Components/Raiting\";\nimport {UnControlledOnOff} from \"./Components/OnOff/UnControlledOnOff\";\nimport {UnControlledAccordion} from \"./Components/Accordion/UnControlledAccordion\";\nimport {OnOff} from \"./Components/OnOff/OnOff\";\nimport Select from 'react-select';\n\n\n\nfunction App() {\n\n    let [ratingValue, setRatingValue] = useState<ratingValueType>(4)\n    let [collapsed, setCollapsed] = useState<boolean>(false)\n    let [color, setColor] = useState(false)\n\n    const onClickfffff = ()=> {\n        alert('nadalllll')\n    }\n\n    return (\n        <div>\n            <OnOff color={color}\n                   setColor={() => {\n                       setColor(!color)\n                   }}/>\n            <Accordion title={'Menu'}\n                       onClick={onClickfffff}\n                       items={[{title: 'Koluan', value: 1},\n                           {title: 'Nastya', value: 2}]}\n                       collapsed={!collapsed}\n                       setCollapsed={() => {\n                           setCollapsed(!collapsed)\n                       }\n                       }/>\n            <Accordion title={'Users'}\n                       onClick={onClickfffff}\n                       items={[]}\n                       collapsed={collapsed}\n                       setCollapsed={() => {\n                           setCollapsed(!collapsed)\n                       }\n                       }/>\n            <Raiting ratingValue={ratingValue} setValue={setRatingValue}/>\n            <UnControlledOnOff/>\n            <UnControlledOnOff/>\n            <UnControlledOnOff/>\n            <UnControlledOnOff/>\n            <UnControlledAccordion title={'Menu222'}/>\n            <UnControlledAccordion title={'Users222'}/>\n            <UncotrolledInput/>\n            <ControlledInput/>\n            <ControlledCheckbox/>\n            <ControlledSelect/>\n           <MyComponents/>\n\n\n        </div>\n    );\n}\n\n\nconst MyComponents = ()=> {\n    const options = [\n        { value: 'chocolate', label: 'Chocolate' },\n        { value: 'strawberry', label: 'Strawberry' },\n        { value: 'vanilla', label: 'Vanilla' }\n    ]\n    return (\n        <div><Select options={options}/></div>\n    )\n}\n\nconst UncotrolledInput = () => {\n    const [value, setValue] = useState('')\n    const inputRef = useRef<HTMLInputElement>(null)\n    const save = () => {\n        const el = inputRef.current as HTMLInputElement\n        setValue(el.value)\n    }\n    return (\n        <div>\n            <input ref={inputRef}/>\n            <button onClick={save}>save</button>\n            - actual value : {value}\n        </div>\n    )\n}\n\nconst ControlledInput = () => {\n    const [parent, setParent] = useState('')\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setParent(e.currentTarget.value)\n    }\n\n    return (\n        <input value={parent} onChange={onChange}/>\n    )\n}\nconst ControlledCheckbox = () => {\n    const [parent, setParent] = useState(true)\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setParent(e.currentTarget.checked)\n    }\n\n    return (\n        <input type={\"checkbox\"} checked={parent} onChange={onChange}/>\n    )\n}\nconst ControlledSelect = () => {\n    const [parent, setParent] = useState<string | undefined>('3')\n    const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n        setParent(e.currentTarget.value)\n    }\n\n    return (\n        <select value={parent} onChange={onChange}>\n            <option value=\"1\">Moscow</option>\n            <option value=\"2\">Minsk</option>\n            <option value=\"3\">Kiev</option>\n        </select>\n    )\n}\n\n/*type ItemType = {\n    title: string\n    value: any\n}\n\ntype SelectPropsType = {\n    value: any\n    items: ItemType[]\n    onChange: (value: any)=> void\n}\n\nexport const Select222 = (props: SelectPropsType) => {\n    return (\n        <div>\n            <div>{}</div>\n            {props.items.map(m=> <div>{m.title}</div>)}\n        </div>\n    )\n}*/\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}